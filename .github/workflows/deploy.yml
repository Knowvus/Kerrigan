name: Deploy PostgreSQL

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true

      - name: Install Diesel CLI
        run: cargo install diesel_cli --no-default-features --features postgres

      - name: Deploy PostgreSQL to DigitalOcean Droplet
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DIGITALOCEAN_KERRIGAN_DROPLET_IP }}
          username: root
          password: ${{ secrets.KERRIGAN_ROOT_PASSWORD }}
          script: |
            set -x

            # Create a Docker network (if needed)
            docker network create app_network || true

            # Create a Docker volume (if needed)
            docker volume create pgdata || true

            # Remove existing container if it exists
            if docker ps -a --format '{{.Names}}' | grep -Eq "^kerrigan\$"; then
              docker rm -f kerrigan
            fi

            # Deploy PostgreSQL container with volume
            docker run --name kerrigan --network app_network \
              -e POSTGRES_USER="${{ secrets.PG_USER }}" \
              -e POSTGRES_PASSWORD="${{ secrets.PG_PASSWORD }}" \
              -e POSTGRES_DB="${{ secrets.PG_DATABASE }}" \
              -v pgdata:/var/lib/postgresql/data \
              -p 5433:5432 -d postgres:latest

            # Verify that the PostgreSQL container is running
            sleep 5
            if [ $(docker ps -q -f name=kerrigan) ]; then
              echo "PostgreSQL container is running successfully on port 5433."
              docker logs kerrigan
            else
              echo "PostgreSQL container failed to start. Here are the logs:"
              docker logs kerrigan
              echo "Container status:"
              docker inspect kerrigan
              exit 1

      - name: Run Diesel Migrations
        env:
          DATABASE_URL: postgres://${{ secrets.PG_USER }}:${{ secrets.PG_PASSWORD }}@${{ secrets.PG_HOST }}:${{ secrets.PG_PORT }}/${{ secrets.PG_DATABASE }}
        run: diesel migration run